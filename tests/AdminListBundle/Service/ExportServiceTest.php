<?php

namespace Tests\Kunstmaan\AdminListBundle\Service;

use Kunstmaan\AdminListBundle\Service\ExportService;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-19 at 09:56:53.
 */
class ExportServiceTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ExportService
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ExportService;
    }

    public function testGetSupportedExtensions()
    {
        $extensions = ExportService::getSupportedExtensions();
        $this->assertEquals(array('Csv' => 'csv', 'Excel' => 'xlsx'), $extensions);
    }

    /**
     * @dataProvider createFromTemplateProvider
     */
    public function testCreateFromTemplate($template = null)
    {
        $adminList = $this->createMock('Kunstmaan\AdminListBundle\AdminList\ExportableInterface');
        $iterator = $this->createMock('\Iterator');
        $adminList->expects($this->once())->method('getIterator')->willReturn($iterator);

        $templateName = is_null($template) ? 'KunstmaanAdminListBundle:Default:export.csv.twig' : $template;
        $renderer = $this->createMock('Symfony\Bundle\FrameworkBundle\Templating\EngineInterface');
        $renderer->expects($this->once())
            ->method('render')
            ->with($templateName,
                array(
                    'iterator'    => $iterator,
                    'adminlist'   => $adminList,
                    'queryparams' => array()
                )
            );

        $this->object->setRenderer($renderer);
        $this->object->createFromTemplate($adminList, ExportService::EXT_CSV, $template);
    }

    public function createFromTemplateProvider()
    {
        return array(
            array(null),
            array('MyBundle:Default:export.csv.twig'),
        );
    }

    public function testStreamExcelSheet()
    {
        $adminList = $this->createMock('Kunstmaan\AdminListBundle\AdminList\ExportableInterface');

        $response = $this->object->streamExcelSheet($adminList);

        $this->assertInstanceOf('Symfony\Component\HttpFoundation\StreamedResponse', $response);
    }

    public function testCreateResponse()
    {
        $response = $this->object->createResponse('content', ExportService::EXT_CSV);
        $this->assertInstanceOf('Symfony\Component\HttpFoundation\Response', $response);
    }
}
